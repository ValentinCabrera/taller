{"ast":null,"code":"var _jsxFileName = \"/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Vehiculos/VehiculoTablaActivos.js\";\n// import React, { useEffect, useState } from 'react';\n// import { getVehiculos, postDeleteVehiculo } from \"../../Utils/Vehiculo\";\n// import DetailVehiculo from \"./DetailVehiculo\";\n// import editIcon from '../../Static/edit.png';\n// import deleteIcon from '../../Static/delete.png';\nimport CreateTable from '../Partials/CreateTable';\nimport DetailVehiculo from './DetailVehiculo';\nimport { getVehiculos, postDeleteVehiculo } from '../../Utils/Vehiculo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VehiculoTablActivos(props) {\n  const {\n    changeFrame\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CreateTable, {\n    fetchGet: getVehiculos,\n    fetchDelete: postDeleteVehiculo,\n    title: \"Vehiculos\",\n    DetailComponent: DetailVehiculo,\n    changeFrame: changeFrame,\n    table: [{\n      column: \"Patente\",\n      filter: [\"patente\"],\n      row: [\"patente\"]\n    }, {\n      column: \"Año\",\n      filter: [\"año\"],\n      row: [\"año\"]\n    }, {\n      column: \"Modelo\",\n      filter: [\"modelo\", \"nombre\"],\n      row: [\"modelo\", \"nombre\"]\n    }, {\n      column: \"Marca\",\n      filter: [\"modelo\", \"marca\", \"nombre\"],\n      row: [\"modelo\", \"marca\", \"nombre\"]\n    }, {\n      column: \"Cliente nombre\",\n      filter: [\"cliente\", \"nombre\"],\n      row: [\"cliente\", \"nombre\"]\n    }, {\n      column: \"Cliente apellido\",\n      filter: [\"cliente\", \"apellido\"],\n      row: [\"cliente\", \"apellido\"]\n    }],\n    vocabulary: {\n      singular: \"vehiculo\",\n      id: [\"patente\"],\n      pronombre: \"el\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n\n  // const [items, setItems] = useState([]);\n  // const [forceRender, setForceRender] = useState();\n  // const [modal, setModal] = useState();\n  // const [currentItem, setCurrentItem] = useState();\n\n  // useEffect(() => {\n  //     getVehiculos().then(response => setItems(response));\n  // }, [forceRender]);\n\n  // const [searchTerm, setSearchTerm] = useState('');\n  // const [filterColumn, setFilterColumn] = useState(null);\n\n  // const handleColumnButtonClick = (columnName) => {\n  //     if (filterColumn) {\n  //         if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n  //         else setFilterColumn(null);\n  //     } else setFilterColumn(columnName);\n  // }\n\n  // function handleDeleteItem(item) {\n  //     let resultado = window.confirm(`¿Está seguro que desea eliminar el vehiculo ${item.patente}?`)\n\n  //     if (resultado) (\n  //         postDeleteVehiculo(item.patente)\n  //             .then(response => {\n  //                 setForceRender({})\n  //                 setCurrentItem();\n  //                 alert(`El vehiculo ${item.patente} se elimino con exito.`)\n  //             })\n  //             .catch(error => { console.log(error) })\n  //     );\n  // }\n\n  // const filteredData = items.filter((item) => {\n  //     if (filterColumn) {\n  //         let valueToSearch;\n  //         if (filterColumn.length === 1) valueToSearch = item[filterColumn[0]];\n  //         if (filterColumn.length === 2) valueToSearch = item[filterColumn[0]][filterColumn[1]];\n  //         if (filterColumn.length === 3) valueToSearch = item[filterColumn[0]][filterColumn[1]][filterColumn[2]];\n  //         return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n  //     } else {\n  //         return true;\n  //     }\n  // });\n\n  // function handleSetModal(item) {\n  //     if (!modal) {\n  //         setCurrentItem(item);\n  //         setModal(true);\n  //     } else {\n  //         setModal(false);\n  //         setCurrentItem();\n  //     };\n  // };\n\n  // return (\n  //     <div>\n  //         {modal &&\n  //             <div class=\"modal-background\">\n  //                 <div class=\"modal-content h100 scroll\">\n  //                     <div className='row w100'>\n  //                         <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n  //                     </div>\n  //                     <DetailVehiculo vehiculo={currentItem} setForceRender={setForceRender} handleSetModal={handleSetModal} />\n  //                 </div>\n  //             </div>\n  //         }\n\n  //         <div className='head-table'>\n  //             <div className='row row-line'>\n  //                 <h1>Vehiculos</h1>\n  //                 {props.changeFrame}\n  //             </div>\n  //             <div className='row'>\n  //                 <input\n  //                     type=\"search\"\n  //                     placeholder=\"Buscar...\"\n  //                     value={searchTerm}\n  //                     className='finder'\n  //                     onChange={(e) => setSearchTerm(e.target.value)}\n  //                 />\n  //                 <button className='head-button' onClick={() => setModal(true)}>Crear</button>\n  //             </div>\n  //         </div>\n  //         <table className=\"cliente-table\">\n  //             <thead>\n  //                 <tr>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'patente' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"patente\"])}>\n  //                             Patente\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'año' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"año\"])}>\n  //                             Año\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'modelo,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"nombre\"])}>\n  //                             Modelo\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'modelo,marca,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"marca\", \"nombre\"])}>\n  //                             Marca\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'cliente,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"nombre\"])}>\n  //                             Cliente nombre\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'cliente,apellido' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"apellido\"])}>\n  //                             Cliente apellido\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         Acciones\n  //                     </th>\n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {filteredData.map((item, index) => (\n  //                     <tr key={index}>\n  //                         <td>{item.patente}</td>\n  //                         <td>{item.año}</td>\n  //                         <td>{item.modelo.nombre}</td>\n  //                         <td>{item.modelo.marca.nombre}</td>\n  //                         <td>{item.cliente.nombre}</td>\n  //                         <td>{item.cliente.apellido}</td>\n  //                         <td className='action-box'>\n  //                             <button className='action-button delete-button' onClick={() => handleDeleteItem(item)}>\n  //                                 <img src={deleteIcon} title=\"Eliminar\" />\n  //                             </button>\n  //                             <button className='action-button edit-button' onClick={() => handleSetModal(item)}>\n  //                                 <img src={editIcon} alt=\"Editar\" />\n  //                             </button>\n  //                         </td>\n  //                     </tr>\n  //                 ))}\n  //             </tbody>\n  //         </table>\n  //     </div >\n  // );\n}\n_c = VehiculoTablActivos;\n;\nvar _c;\n$RefreshReg$(_c, \"VehiculoTablActivos\");","map":{"version":3,"names":["CreateTable","DetailVehiculo","getVehiculos","postDeleteVehiculo","jsxDEV","_jsxDEV","VehiculoTablActivos","props","changeFrame","fetchGet","fetchDelete","title","DetailComponent","table","column","filter","row","vocabulary","singular","id","pronombre","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Vehiculos/VehiculoTablaActivos.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { getVehiculos, postDeleteVehiculo } from \"../../Utils/Vehiculo\";\n// import DetailVehiculo from \"./DetailVehiculo\";\n// import editIcon from '../../Static/edit.png';\n// import deleteIcon from '../../Static/delete.png';\nimport CreateTable from '../Partials/CreateTable';\nimport DetailVehiculo from './DetailVehiculo';\nimport { getVehiculos, postDeleteVehiculo } from '../../Utils/Vehiculo';\n\nexport default function VehiculoTablActivos(props) {\n    const { changeFrame } = props;\n    return (\n        <CreateTable\n            fetchGet={getVehiculos}\n            fetchDelete={postDeleteVehiculo}\n            title=\"Vehiculos\"\n            DetailComponent={DetailVehiculo}\n            changeFrame={changeFrame}\n            table={[\n                { column: \"Patente\", filter: [\"patente\"], row: [\"patente\"] },\n                { column: \"Año\", filter: [\"año\"], row: [\"año\"] },\n                { column: \"Modelo\", filter: [\"modelo\", \"nombre\"], row: [\"modelo\", \"nombre\"] },\n                { column: \"Marca\", filter: [\"modelo\", \"marca\", \"nombre\"], row: [\"modelo\", \"marca\", \"nombre\"] },\n                { column: \"Cliente nombre\", filter: [\"cliente\", \"nombre\"], row: [\"cliente\", \"nombre\"] },\n                { column: \"Cliente apellido\", filter: [\"cliente\", \"apellido\"], row: [\"cliente\", \"apellido\"] }]}\n            vocabulary={{\n                singular: \"vehiculo\",\n                id: [\"patente\"],\n                pronombre: \"el\"\n            }} />\n    );\n\n    // const [items, setItems] = useState([]);\n    // const [forceRender, setForceRender] = useState();\n    // const [modal, setModal] = useState();\n    // const [currentItem, setCurrentItem] = useState();\n\n    // useEffect(() => {\n    //     getVehiculos().then(response => setItems(response));\n    // }, [forceRender]);\n\n    // const [searchTerm, setSearchTerm] = useState('');\n    // const [filterColumn, setFilterColumn] = useState(null);\n\n    // const handleColumnButtonClick = (columnName) => {\n    //     if (filterColumn) {\n    //         if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n    //         else setFilterColumn(null);\n    //     } else setFilterColumn(columnName);\n    // }\n\n    // function handleDeleteItem(item) {\n    //     let resultado = window.confirm(`¿Está seguro que desea eliminar el vehiculo ${item.patente}?`)\n\n    //     if (resultado) (\n    //         postDeleteVehiculo(item.patente)\n    //             .then(response => {\n    //                 setForceRender({})\n    //                 setCurrentItem();\n    //                 alert(`El vehiculo ${item.patente} se elimino con exito.`)\n    //             })\n    //             .catch(error => { console.log(error) })\n    //     );\n    // }\n\n    // const filteredData = items.filter((item) => {\n    //     if (filterColumn) {\n    //         let valueToSearch;\n    //         if (filterColumn.length === 1) valueToSearch = item[filterColumn[0]];\n    //         if (filterColumn.length === 2) valueToSearch = item[filterColumn[0]][filterColumn[1]];\n    //         if (filterColumn.length === 3) valueToSearch = item[filterColumn[0]][filterColumn[1]][filterColumn[2]];\n    //         return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n    //     } else {\n    //         return true;\n    //     }\n    // });\n\n    // function handleSetModal(item) {\n    //     if (!modal) {\n    //         setCurrentItem(item);\n    //         setModal(true);\n    //     } else {\n    //         setModal(false);\n    //         setCurrentItem();\n    //     };\n    // };\n\n    // return (\n    //     <div>\n    //         {modal &&\n    //             <div class=\"modal-background\">\n    //                 <div class=\"modal-content h100 scroll\">\n    //                     <div className='row w100'>\n    //                         <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n    //                     </div>\n    //                     <DetailVehiculo vehiculo={currentItem} setForceRender={setForceRender} handleSetModal={handleSetModal} />\n    //                 </div>\n    //             </div>\n    //         }\n\n    //         <div className='head-table'>\n    //             <div className='row row-line'>\n    //                 <h1>Vehiculos</h1>\n    //                 {props.changeFrame}\n    //             </div>\n    //             <div className='row'>\n    //                 <input\n    //                     type=\"search\"\n    //                     placeholder=\"Buscar...\"\n    //                     value={searchTerm}\n    //                     className='finder'\n    //                     onChange={(e) => setSearchTerm(e.target.value)}\n    //                 />\n    //                 <button className='head-button' onClick={() => setModal(true)}>Crear</button>\n    //             </div>\n    //         </div>\n    //         <table className=\"cliente-table\">\n    //             <thead>\n    //                 <tr>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'patente' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"patente\"])}>\n    //                             Patente\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'año' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"año\"])}>\n    //                             Año\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'modelo,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"nombre\"])}>\n    //                             Modelo\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'modelo,marca,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"marca\", \"nombre\"])}>\n    //                             Marca\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'cliente,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"nombre\"])}>\n    //                             Cliente nombre\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'cliente,apellido' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"apellido\"])}>\n    //                             Cliente apellido\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         Acciones\n    //                     </th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {filteredData.map((item, index) => (\n    //                     <tr key={index}>\n    //                         <td>{item.patente}</td>\n    //                         <td>{item.año}</td>\n    //                         <td>{item.modelo.nombre}</td>\n    //                         <td>{item.modelo.marca.nombre}</td>\n    //                         <td>{item.cliente.nombre}</td>\n    //                         <td>{item.cliente.apellido}</td>\n    //                         <td className='action-box'>\n    //                             <button className='action-button delete-button' onClick={() => handleDeleteItem(item)}>\n    //                                 <img src={deleteIcon} title=\"Eliminar\" />\n    //                             </button>\n    //                             <button className='action-button edit-button' onClick={() => handleSetModal(item)}>\n    //                                 <img src={editIcon} alt=\"Editar\" />\n    //                             </button>\n    //                         </td>\n    //                     </tr>\n    //                 ))}\n    //             </tbody>\n    //         </table>\n    //     </div >\n    // );\n};\n\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,eAAe,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EAC/C,MAAM;IAAEC;EAAY,CAAC,GAAGD,KAAK;EAC7B,oBACIF,OAAA,CAACL,WAAW;IACRS,QAAQ,EAAEP,YAAa;IACvBQ,WAAW,EAAEP,kBAAmB;IAChCQ,KAAK,EAAC,WAAW;IACjBC,eAAe,EAAEX,cAAe;IAChCO,WAAW,EAAEA,WAAY;IACzBK,KAAK,EAAE,CACH;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE,CAAC,SAAS,CAAC;MAAEC,GAAG,EAAE,CAAC,SAAS;IAAE,CAAC,EAC5D;MAAEF,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE,CAAC,KAAK,CAAC;MAAEC,GAAG,EAAE,CAAC,KAAK;IAAE,CAAC,EAChD;MAAEF,MAAM,EAAE,QAAQ;MAAEC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ;IAAE,CAAC,EAC7E;MAAEF,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ;IAAE,CAAC,EAC9F;MAAEF,MAAM,EAAE,gBAAgB;MAAEC,MAAM,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC,SAAS,EAAE,QAAQ;IAAE,CAAC,EACvF;MAAEF,MAAM,EAAE,kBAAkB;MAAEC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;MAAEC,GAAG,EAAE,CAAC,SAAS,EAAE,UAAU;IAAE,CAAC,CAAE;IACnGC,UAAU,EAAE;MACRC,QAAQ,EAAE,UAAU;MACpBC,EAAE,EAAE,CAAC,SAAS,CAAC;MACfC,SAAS,EAAE;IACf;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAGbxKuBnB,mBAAmB;AAwK1C;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}