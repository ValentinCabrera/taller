{"ast":null,"code":"var _jsxFileName = \"/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Clientes/ClienteTabla.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './clienteTabla.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteTabla = props => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterColumn, setFilterColumn] = useState(null);\n  const columnRef = useRef(null);\n  const handleColumnButtonClick = columnName => {\n    setFilterColumn(columnName);\n  };\n  const handleColumnResize = e => {\n    // Calcula el nuevo ancho de la columna y actualiza el estilo\n    const newWidth = e.pageX - columnRef.current.getBoundingClientRect().left;\n    columnRef.current.style.width = `${newWidth}px`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filtrar...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"cliente-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            ref: columnRef,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleColumnButtonClick('nombre'),\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ClienteTabla, \"hHH2RRdg3gZYRLlrgr5tpyxQjQY=\");\n_c = ClienteTabla;\nexport default ClienteTabla;\n\n// const ClienteTabla = (props) => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         setFilterColumn(columnName);\n//     }\n\n//     if (props.data) {\n//         const filteredData = props.data.filter((client) => {\n//             if (filterColumn) {\n//                 const valueToSearch = client[filterColumn];\n//                 return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n//             } else {\n//                 // Sin una columna de filtro seleccionada, muestra todos los datos\n//                 return true;\n//             }\n//         });\n\n//         return (\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Filtrar...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                 />\n//                 <table className=\"cliente-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('nombre')}>\n//                                     Nombre\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('apellido')}>\n//                                     Apellido\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('mail')}>\n//                                     Email\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('telefono')}>\n//                                     Telefono\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('direccion')}>\n//                                     Direccion\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('ultima_visita')}>\n//                                     Ultima visita\n//                                 </button>\n//                             </th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {filteredData.map((client, index) => (\n//                             <tr key={index}>\n//                                 <td>{client.nombre}</td>\n//                                 <td>{client.apellido}</td>\n//                                 <td>{client.mail}</td>\n//                                 <td>{client.telefono}</td>\n//                                 <td className=\"direccion-cell\">{client.direccion}</td>\n//                                 <td>{client.ultima_visita.replace('T', ' ').replace('-', '/').replace('-', '/').slice(0, 16)}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         );\n//     }\n//     return null;\n// };\n\n// export default ClienteTabla;\nvar _c;\n$RefreshReg$(_c, \"ClienteTabla\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","ClienteTabla","props","_s","searchTerm","setSearchTerm","filterColumn","setFilterColumn","columnRef","handleColumnButtonClick","columnName","handleColumnResize","e","newWidth","pageX","current","getBoundingClientRect","left","style","width","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Clientes/ClienteTabla.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './clienteTabla.css';\n\nconst ClienteTabla = (props) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterColumn, setFilterColumn] = useState(null);\n    const columnRef = useRef(null);\n\n    const handleColumnButtonClick = (columnName) => {\n        setFilterColumn(columnName);\n    }\n\n    const handleColumnResize = (e) => {\n        // Calcula el nuevo ancho de la columna y actualiza el estilo\n        const newWidth = e.pageX - columnRef.current.getBoundingClientRect().left;\n        columnRef.current.style.width = `${newWidth}px`;\n    }\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Filtrar...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            <table className=\"cliente-table\">\n                <thead>\n                    <tr>\n                        <th ref={columnRef}>\n                            <button onClick={() => handleColumnButtonClick('nombre')}>\n                                Nombre\n                            </button>\n                        </th>\n                        {/* Resto de encabezados de columnas */}\n                    </tr>\n                </thead>\n                <tbody>\n                    {/* Cuerpo de la tabla */}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default ClienteTabla;\n\n\n// const ClienteTabla = (props) => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         setFilterColumn(columnName);\n//     }\n\n//     if (props.data) {\n//         const filteredData = props.data.filter((client) => {\n//             if (filterColumn) {\n//                 const valueToSearch = client[filterColumn];\n//                 return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n//             } else {\n//                 // Sin una columna de filtro seleccionada, muestra todos los datos\n//                 return true;\n//             }\n//         });\n\n//         return (\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Filtrar...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                 />\n//                 <table className=\"cliente-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('nombre')}>\n//                                     Nombre\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('apellido')}>\n//                                     Apellido\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('mail')}>\n//                                     Email\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('telefono')}>\n//                                     Telefono\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('direccion')}>\n//                                     Direccion\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('ultima_visita')}>\n//                                     Ultima visita\n//                                 </button>\n//                             </th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {filteredData.map((client, index) => (\n//                             <tr key={index}>\n//                                 <td>{client.nombre}</td>\n//                                 <td>{client.apellido}</td>\n//                                 <td>{client.mail}</td>\n//                                 <td>{client.telefono}</td>\n//                                 <td className=\"direccion-cell\">{client.direccion}</td>\n//                                 <td>{client.ultima_visita.replace('T', ' ').replace('-', '/').replace('-', '/').slice(0, 16)}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         );\n//     }\n//     return null;\n// };\n\n// export default ClienteTabla;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMU,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMY,uBAAuB,GAAIC,UAAU,IAAK;IAC5CH,eAAe,CAACG,UAAU,CAAC;EAC/B,CAAC;EAED,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAC9B;IACA,MAAMC,QAAQ,GAAGD,CAAC,CAACE,KAAK,GAAGN,SAAS,CAACO,OAAO,CAACC,qBAAqB,CAAC,CAAC,CAACC,IAAI;IACzET,SAAS,CAACO,OAAO,CAACG,KAAK,CAACC,KAAK,GAAI,GAAEN,QAAS,IAAG;EACnD,CAAC;EAED,oBACIb,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGZ,CAAC,IAAKP,aAAa,CAACO,CAAC,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF7B,OAAA;MAAO8B,SAAS,EAAC,eAAe;MAAAV,QAAA,gBAC5BpB,OAAA;QAAAoB,QAAA,eACIpB,OAAA;UAAAoB,QAAA,eACIpB,OAAA;YAAI+B,GAAG,EAAEvB,SAAU;YAAAY,QAAA,eACfpB,OAAA;cAAQgC,OAAO,EAAEA,CAAA,KAAMvB,uBAAuB,CAAC,QAAQ,CAAE;cAAAW,QAAA,EAAC;YAE1D;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACR7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAxCIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA0ClB,eAAeA,YAAY;;AAG3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}