{"ast":null,"code":"export const host = \"http://localhost:8080/\";\nasync function customFetch(url, requestInit, token) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) headers['Token'] = token;\n  try {\n    const response = await fetch(url, requestInit);\n    const responseText = await response.text();\n    try {\n      return JSON.parse(responseText);\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n    ;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n  ;\n}\n;\nexport async function getFetch(url, token) {\n  return customFetch(url, {\n    headers: headers\n  });\n}\n;\nexport async function postFetch(url, body, token) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) headers['Token'] = token;\n  return customFetch(url, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(body)\n  });\n}\n;","map":{"version":3,"names":["host","customFetch","url","requestInit","token","headers","response","fetch","responseText","text","JSON","parse","error","console","log","getFetch","postFetch","body","method","stringify"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Utils/Fetchs.js"],"sourcesContent":["export const host = \"http://localhost:8080/\";\n\nasync function customFetch(url, requestInit, token) {\n    const headers = { 'Content-Type': 'application/json' };\n    if (token) headers['Token'] = token;\n\n    try {\n        const response = await fetch(url, requestInit);\n        const responseText = await response.text();\n\n        try {\n            return JSON.parse(responseText);\n        } catch (error) {\n            console.log(error);\n            return [];\n        };\n    } catch (error) {\n        console.log(error);\n        return [];\n    };\n};\n\nexport async function getFetch(url, token) {\n\n    return customFetch(url, { headers: headers });\n};\n\nexport async function postFetch(url, body, token) {\n    const headers = { 'Content-Type': 'application/json' };\n    if (token) headers['Token'] = token;\n\n    return customFetch(url, { method: 'POST', headers: headers, body: JSON.stringify(body) });\n};"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,wBAAwB;AAE5C,eAAeC,WAAWA,CAACC,GAAG,EAAEC,WAAW,EAAEC,KAAK,EAAE;EAChD,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EACtD,IAAID,KAAK,EAAEC,OAAO,CAAC,OAAO,CAAC,GAAGD,KAAK;EAEnC,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,WAAW,CAAC;IAC9C,MAAMK,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE1C,IAAI;MACA,OAAOC,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC;IACnC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,EAAE;IACb;IAAC;EACL,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,EAAE;EACb;EAAC;AACL;AAAC;AAED,OAAO,eAAeG,QAAQA,CAACb,GAAG,EAAEE,KAAK,EAAE;EAEvC,OAAOH,WAAW,CAACC,GAAG,EAAE;IAAEG,OAAO,EAAEA;EAAQ,CAAC,CAAC;AACjD;AAAC;AAED,OAAO,eAAeW,SAASA,CAACd,GAAG,EAAEe,IAAI,EAAEb,KAAK,EAAE;EAC9C,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EACtD,IAAID,KAAK,EAAEC,OAAO,CAAC,OAAO,CAAC,GAAGD,KAAK;EAEnC,OAAOH,WAAW,CAACC,GAAG,EAAE;IAAEgB,MAAM,EAAE,MAAM;IAAEb,OAAO,EAAEA,OAAO;IAAEY,IAAI,EAAEP,IAAI,CAACS,SAAS,CAACF,IAAI;EAAE,CAAC,CAAC;AAC7F;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}