{"ast":null,"code":"var _jsxFileName = \"/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Ordenes/OrdenTablaActivos.js\";\n// import React, { useEffect, useState } from 'react';\nimport { getOrdenes, getOrdenesDeleted, postDeleteOrden, postRecoverOrden } from \"../../Utils/Orden\";\n// import Listar from \"../Listar\";\nimport DetailOrden from \"./DetailOrden\";\nimport CreateTable from '../Partials/CreateTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrdenTablaActivos(props) {\n  const {\n    changeFrame\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CreateTable, {\n    fetchGet: getOrdenes,\n    fetchDelete: postDeleteOrden,\n    title: \"Vehiculos\",\n    DetailComponent: DetailVehiculo,\n    changeFrame: changeFrame,\n    id: \"patente\",\n    table: [{\n      column: \"Patente\",\n      filter: [\"patente\"],\n      row: [\"patente\"]\n    }, {\n      column: \"Año\",\n      filter: [\"año\"],\n      row: [\"año\"]\n    }, {\n      column: \"Modelo\",\n      filter: [\"modelo\", \"nombre\"],\n      row: [\"modelo\", \"nombre\"]\n    }, {\n      column: \"Marca\",\n      filter: [\"modelo\", \"marca\", \"nombre\"],\n      row: [\"modelo\", \"marca\", \"nombre\"]\n    }, {\n      column: \"Cliente nombre\",\n      filter: [\"cliente\", \"nombre\"],\n      row: [\"cliente\", \"nombre\"]\n    }, {\n      column: \"Cliente apellido\",\n      filter: [\"cliente\", \"apellido\"],\n      row: [\"cliente\", \"apellido\"]\n    }],\n    vocabulary: {\n      singular: \"vehiculo\",\n      id: [\"patente\"],\n      pronombre: \"el\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = OrdenTablaActivos;\n;\n\n// export default function OrdenTablActivos(props) {\n//     const [items, setItems] = useState([]);\n//     const [forceRender, setForceRender] = useState();\n//     const [modal, setModal] = useState();\n//     const [currentItem, setCurrentItem] = useState();\n\n//     useEffect(() => {\n//         getOrdenes().then(response => setItems(response));\n//     }, [forceRender]);\n\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         if (filterColumn) {\n//             if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n//             else setFilterColumn(null);\n//         } else setFilterColumn(columnName);\n//     }\n\n//     function handleDeleteItem(item) {\n//         let resultado = window.confirm(`¿Está seguro que desea eliminar la orden numero ${item.id}?`)\n\n//         if (resultado) (\n//             postDeleteOrden(item.id)\n//                 .then(response => {\n//                     setForceRender({})\n//                     setCurrentItem();\n//                     alert(`La orden numero ${item.id} se elimino con exito.`)\n//                 })\n//                 .catch(error => { console.log(error) })\n//         );\n//     }\n\n//     const filteredData = items.filter((item) => {\n//         if (filterColumn) {\n//             let valueToSearch;\n//             if (filterColumn.length === 1) valueToSearch = item[filterColumn[0]];\n//             if (filterColumn.length === 2) valueToSearch = item[filterColumn[0]][filterColumn[1]];\n//             return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n//         } else {\n//             return true;\n//         }\n//     });\n\n//     function handleSetModal(item) {\n//         if (!modal) {\n//             setCurrentItem(item);\n//             setModal(true);\n//         } else {\n//             setModal(false);\n//             setCurrentItem();\n//         };\n//     };\n\n//     return (\n//         <div>\n//             {modal &&\n//                 <div class=\"modal-background\">\n//                     <div class=\"modal-content h100 scroll\">\n//                         <div className='row w100'>\n//                             <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n//                         </div>\n//                         <DetailOrden orden={currentItem} setForceRender={setForceRender} handleSetModal={handleSetModal} />\n//                     </div>\n//                 </div>\n//             }\n\n//             <div className='head-table'>\n//                 <div className='row row-line'>\n//                     <h1>Ordenes</h1>\n//                     {props.changeFrame}\n//                 </div>\n//                 <div className='row'>\n//                     <input\n//                         type=\"search\"\n//                         placeholder=\"Buscar...\"\n//                         value={searchTerm}\n//                         className='finder'\n//                         onChange={(e) => setSearchTerm(e.target.value)}\n//                     />\n//                     <button className='head-button' onClick={() => setModal(true)}>Crear</button>\n//                 </div>\n//             </div>\n//             <table className=\"cliente-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>\n//                             <button className={filterColumn && filterColumn.toString() === 'vehiculo,patente' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"vehiculo\", \"patente\"])}>\n//                                 Vehiculo\n//                             </button>\n//                         </th>\n//                         <th>\n//                             <button className={filterColumn && filterColumn.toString() === 'cliente,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"nombre\"])}>\n//                                 Nombre cliente\n//                             </button>\n//                         </th>\n//                         <th>\n//                             <button className={filterColumn && filterColumn.toString() === 'cliente,apellido' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"apellido\"])}>\n//                                 Apellido cliente\n//                             </button>\n//                         </th>\n//                         <th>\n//                             <p>Servicios</p>\n//                         </th>\n//                         <th>\n//                             Acciones\n//                         </th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {filteredData.map((item, index) => (\n//                         <tr key={index}>\n//                             <td>{item.vehiculo.patente}</td>\n//                             <td>{item.cliente.nombre}</td>\n//                             <td>{item.cliente.apellido}</td>\n//                             <td>\n//                                 <select className='cliente-table-select'>\n//                                     {item.servicios.map(servicio => (\n//                                         <option value={servicio.nombre}>{servicio.nombre}</option>\n//                                     ))}\n//                                 </select>\n//                             </td>\n//                             <td className='action-box'>\n//                                 <button className='action-button red' onClick={() => handleDeleteItem(item)}>-</button>\n//                                 <button className='action-button green' onClick={() => handleSetModal(item)}>+</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div >\n//     );\n\n// };\nvar _c;\n$RefreshReg$(_c, \"OrdenTablaActivos\");","map":{"version":3,"names":["getOrdenes","getOrdenesDeleted","postDeleteOrden","postRecoverOrden","DetailOrden","CreateTable","jsxDEV","_jsxDEV","OrdenTablaActivos","props","changeFrame","fetchGet","fetchDelete","title","DetailComponent","DetailVehiculo","id","table","column","filter","row","vocabulary","singular","pronombre","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Ordenes/OrdenTablaActivos.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\nimport { getOrdenes, getOrdenesDeleted, postDeleteOrden, postRecoverOrden } from \"../../Utils/Orden\";\n// import Listar from \"../Listar\";\nimport DetailOrden from \"./DetailOrden\";\n\nimport CreateTable from '../Partials/CreateTable';\n\nexport default function OrdenTablaActivos(props) {\n    const { changeFrame } = props;\n    return (\n        <CreateTable\n            fetchGet={getOrdenes}\n            fetchDelete={postDeleteOrden}\n            title=\"Vehiculos\"\n            DetailComponent={DetailVehiculo}\n            changeFrame={changeFrame}\n            id=\"patente\"\n            table={[\n                { column: \"Patente\", filter: [\"patente\"], row: [\"patente\"] },\n                { column: \"Año\", filter: [\"año\"], row: [\"año\"] },\n                { column: \"Modelo\", filter: [\"modelo\", \"nombre\"], row: [\"modelo\", \"nombre\"] },\n                { column: \"Marca\", filter: [\"modelo\", \"marca\", \"nombre\"], row: [\"modelo\", \"marca\", \"nombre\"] },\n                { column: \"Cliente nombre\", filter: [\"cliente\", \"nombre\"], row: [\"cliente\", \"nombre\"] },\n                { column: \"Cliente apellido\", filter: [\"cliente\", \"apellido\"], row: [\"cliente\", \"apellido\"] }]}\n            vocabulary={{\n                singular: \"vehiculo\",\n                id: [\"patente\"],\n                pronombre: \"el\"\n            }} />\n    );\n};\n\n\n// export default function OrdenTablActivos(props) {\n//     const [items, setItems] = useState([]);\n//     const [forceRender, setForceRender] = useState();\n//     const [modal, setModal] = useState();\n//     const [currentItem, setCurrentItem] = useState();\n\n//     useEffect(() => {\n//         getOrdenes().then(response => setItems(response));\n//     }, [forceRender]);\n\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         if (filterColumn) {\n//             if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n//             else setFilterColumn(null);\n//         } else setFilterColumn(columnName);\n//     }\n\n//     function handleDeleteItem(item) {\n//         let resultado = window.confirm(`¿Está seguro que desea eliminar la orden numero ${item.id}?`)\n\n//         if (resultado) (\n//             postDeleteOrden(item.id)\n//                 .then(response => {\n//                     setForceRender({})\n//                     setCurrentItem();\n//                     alert(`La orden numero ${item.id} se elimino con exito.`)\n//                 })\n//                 .catch(error => { console.log(error) })\n//         );\n//     }\n\n//     const filteredData = items.filter((item) => {\n//         if (filterColumn) {\n//             let valueToSearch;\n//             if (filterColumn.length === 1) valueToSearch = item[filterColumn[0]];\n//             if (filterColumn.length === 2) valueToSearch = item[filterColumn[0]][filterColumn[1]];\n//             return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n//         } else {\n//             return true;\n//         }\n//     });\n\n//     function handleSetModal(item) {\n//         if (!modal) {\n//             setCurrentItem(item);\n//             setModal(true);\n//         } else {\n//             setModal(false);\n//             setCurrentItem();\n//         };\n//     };\n\n//     return (\n//         <div>\n//             {modal &&\n//                 <div class=\"modal-background\">\n//                     <div class=\"modal-content h100 scroll\">\n//                         <div className='row w100'>\n//                             <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n//                         </div>\n//                         <DetailOrden orden={currentItem} setForceRender={setForceRender} handleSetModal={handleSetModal} />\n//                     </div>\n//                 </div>\n//             }\n\n//             <div className='head-table'>\n//                 <div className='row row-line'>\n//                     <h1>Ordenes</h1>\n//                     {props.changeFrame}\n//                 </div>\n//                 <div className='row'>\n//                     <input\n//                         type=\"search\"\n//                         placeholder=\"Buscar...\"\n//                         value={searchTerm}\n//                         className='finder'\n//                         onChange={(e) => setSearchTerm(e.target.value)}\n//                     />\n//                     <button className='head-button' onClick={() => setModal(true)}>Crear</button>\n//                 </div>\n//             </div>\n//             <table className=\"cliente-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>\n//                             <button className={filterColumn && filterColumn.toString() === 'vehiculo,patente' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"vehiculo\", \"patente\"])}>\n//                                 Vehiculo\n//                             </button>\n//                         </th>\n//                         <th>\n//                             <button className={filterColumn && filterColumn.toString() === 'cliente,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"nombre\"])}>\n//                                 Nombre cliente\n//                             </button>\n//                         </th>\n//                         <th>\n//                             <button className={filterColumn && filterColumn.toString() === 'cliente,apellido' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"apellido\"])}>\n//                                 Apellido cliente\n//                             </button>\n//                         </th>\n//                         <th>\n//                             <p>Servicios</p>\n//                         </th>\n//                         <th>\n//                             Acciones\n//                         </th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {filteredData.map((item, index) => (\n//                         <tr key={index}>\n//                             <td>{item.vehiculo.patente}</td>\n//                             <td>{item.cliente.nombre}</td>\n//                             <td>{item.cliente.apellido}</td>\n//                             <td>\n//                                 <select className='cliente-table-select'>\n//                                     {item.servicios.map(servicio => (\n//                                         <option value={servicio.nombre}>{servicio.nombre}</option>\n//                                     ))}\n//                                 </select>\n//                             </td>\n//                             <td className='action-box'>\n//                                 <button className='action-button red' onClick={() => handleDeleteItem(item)}>-</button>\n//                                 <button className='action-button green' onClick={() => handleSetModal(item)}>+</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div >\n//     );\n\n// };\n"],"mappings":";AACA;AACA,SAASA,UAAU,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,mBAAmB;AACpG;AACA,OAAOC,WAAW,MAAM,eAAe;AAEvC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAC7C,MAAM;IAAEC;EAAY,CAAC,GAAGD,KAAK;EAC7B,oBACIF,OAAA,CAACF,WAAW;IACRM,QAAQ,EAAEX,UAAW;IACrBY,WAAW,EAAEV,eAAgB;IAC7BW,KAAK,EAAC,WAAW;IACjBC,eAAe,EAAEC,cAAe;IAChCL,WAAW,EAAEA,WAAY;IACzBM,EAAE,EAAC,SAAS;IACZC,KAAK,EAAE,CACH;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE,CAAC,SAAS,CAAC;MAAEC,GAAG,EAAE,CAAC,SAAS;IAAE,CAAC,EAC5D;MAAEF,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE,CAAC,KAAK,CAAC;MAAEC,GAAG,EAAE,CAAC,KAAK;IAAE,CAAC,EAChD;MAAEF,MAAM,EAAE,QAAQ;MAAEC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ;IAAE,CAAC,EAC7E;MAAEF,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ;IAAE,CAAC,EAC9F;MAAEF,MAAM,EAAE,gBAAgB;MAAEC,MAAM,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC,SAAS,EAAE,QAAQ;IAAE,CAAC,EACvF;MAAEF,MAAM,EAAE,kBAAkB;MAAEC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;MAAEC,GAAG,EAAE,CAAC,SAAS,EAAE,UAAU;IAAE,CAAC,CAAE;IACnGC,UAAU,EAAE;MACRC,QAAQ,EAAE,UAAU;MACpBN,EAAE,EAAE,CAAC,SAAS,CAAC;MACfO,SAAS,EAAE;IACf;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEjB;AAACC,EAAA,GAvBuBpB,iBAAiB;AAuBxoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}