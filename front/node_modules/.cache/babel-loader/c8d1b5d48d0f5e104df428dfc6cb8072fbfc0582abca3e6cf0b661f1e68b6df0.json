{"ast":null,"code":"var _jsxFileName = \"/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Partials/CreateTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport editIcon from '../../Static/edit.png';\nimport deleteIcon from '../../Static/delete.png';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTable(props) {\n  const {\n    fetchGet,\n    fetchDelete,\n    title,\n    DetailComponent,\n    table,\n    changeFrame,\n    vocabulary,\n    id\n  } = props;\n  const accionModificar = {\n    component: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: editIcon,\n      alt: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 20\n    }, this),\n    className: \"action-button edit-button\",\n    funcion: handleRecoverItem\n  };\n  const accionEliminar = {\n    component: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: deleteIcon,\n      alt: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 20\n    }, this),\n    className: \"action-button delete-button\",\n    funcion: handleRecoverItem\n  };\n  const ModalButton = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"head-button\",\n    onClick: () => setModal(true),\n    children: \"Crear\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n  const Modal = /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"modal-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal-content h100 scroll\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row w100\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close-button\",\n          onClick: handleSetModal,\n          children: \"Volver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DetailComponent, {\n        item: currentItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    items: items,\n    title: \"Eliminados\",\n    changeFrame: changeFrame,\n    acciones: [accionModificar],\n    table: table,\n    modalState: ModalButton,\n    Modal: Modal,\n    ModalButton: ModalButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n\n  // const [items, setItems] = useState([]);\n  // const [forceRender, setForceRender] = useState();\n  // const [modal, setModal] = useState();\n  // const [currentItem, setCurrentItem] = useState();\n\n  // useEffect(() => {\n  //     fetchGet().then(response => setItems(response));\n  // }, [forceRender]);\n\n  // const [searchTerm, setSearchTerm] = useState('');\n  // const [filterColumn, setFilterColumn] = useState(null);\n\n  // const handleColumnButtonClick = (columnName) => {\n  //     if (filterColumn) {\n  //         if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n  //         else setFilterColumn(null);\n  //     } else setFilterColumn(columnName);\n  // }\n\n  // function handleDeleteItem(item) {\n  //     let resultado = window.confirm(`¿Está seguro que deseas eliminar ${vocabulary.pronombre} ${vocabulary.singular} con ${vocabulary.id} ${item[vocabulary.id]}?`)\n  //     if (resultado) (\n  //         fetchDelete(item[id])\n  //             .then(response => {\n  //                 setForceRender({})\n  //                 setCurrentItem();\n  //                 alert(`Se elimino exitosamente ${vocabulary.pronombre} ${vocabulary.singular} con ${vocabulary.id} ${item[vocabulary.id]}.`)\n  //             })\n  //             .catch(error => { console.log(error) })\n  //     );\n  // }\n\n  // const filteredData = items.filter((item) => {\n  //     if (filterColumn) {\n  //         let valueToSearch = item;\n\n  //         for (let i of filterColumn) {\n  //             valueToSearch = valueToSearch[i];\n  //         }\n  //         return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n  //     } else {\n  //         return true;\n  //     }\n  // });\n\n  // function handleSetModal(item) {\n  //     if (!modal) {\n  //         setCurrentItem(item);\n  //         setModal(true);\n  //     } else {\n  //         setModal(false);\n  //         setCurrentItem();\n  //     };\n  // };\n\n  // function getAtributte(item, index) {\n  //     for (let i of index) {\n  //         item = item[i];\n  //     } return item;\n  // }\n\n  // return (\n  //     <div>\n  //         {modal &&\n  // <div class=\"modal-background\">\n  //     <div class=\"modal-content h100 scroll\">\n  //         <div className='row w100'>\n  //             <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n  //         </div>\n  //         <DetailComponent item={currentItem} />\n  //     </div>\n  // </div>\n  //         }\n\n  //         <div className='head-table'>\n  //             <div className='row row-line'>\n  //                 <h1>{title}</h1>\n  //                 {changeFrame}\n  //             </div>\n  //             <div className='row'>\n  //                 <input\n  //                     type=\"search\"\n  //                     placeholder=\"Buscar...\"\n  //                     value={searchTerm}\n  //                     className='finder'\n  //                     onChange={(e) => setSearchTerm(e.target.value)}\n  //                 />\n  //                 <button className='head-button' onClick={() => setModal(true)}>Crear</button>\n  //             </div>\n  //         </div>\n  //         <table className=\"cliente-table\">\n  //             <thead>\n  //                 <tr>\n  //                     {table.map(group => (\n  //                         <th>\n  //                             <button className={filterColumn && filterColumn.toString() === group.filter.toString() ? 'selected' : ''} onClick={() => handleColumnButtonClick(group.filter)}>\n  //                                 {group.column}\n  //                             </button>\n  //                         </th>\n  //                     ))}\n  //                     <th>\n  //                         Acciones\n  //                     </th>\n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {filteredData.map((item, index) => (\n  //                     <tr key={index}>\n  //                         {table.map(group => <td>{getAtributte(item, group.row)}</td>)}\n  //                         <td className='action-box'>\n  //                             <button className='action-button delete-button' onClick={() => handleDeleteItem(item)}>\n  //                                 <img src={deleteIcon} title=\"Eliminar\" />\n  //                             </button>\n  //                             <button className='action-button edit-button' onClick={() => handleSetModal(item)}>\n  //                                 <img src={editIcon} alt=\"Editar\" />\n  //                             </button>\n  //                         </td>\n  //                     </tr>\n  //                 ))}\n  //             </tbody>\n  //         </table>\n  //     </div >\n  // );\n}\n_c = CreateTable;\n;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useEffect","useState","editIcon","deleteIcon","Table","jsxDEV","_jsxDEV","CreateTable","props","fetchGet","fetchDelete","title","DetailComponent","table","changeFrame","vocabulary","id","accionModificar","component","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","funcion","handleRecoverItem","accionEliminar","ModalButton","onClick","setModal","children","Modal","class","handleSetModal","item","currentItem","items","acciones","modalState","_c","$RefreshReg$"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Partials/CreateTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport editIcon from '../../Static/edit.png';\nimport deleteIcon from '../../Static/delete.png';\nimport Table from './Table';\n\nexport default function CreateTable(props) {\n    const { fetchGet, fetchDelete, title, DetailComponent, table, changeFrame, vocabulary, id } = props;\n\n    const accionModificar = {\n        component: <img src={editIcon} alt=\"Editar\" />,\n        className: \"action-button edit-button\",\n        funcion: handleRecoverItem\n    }\n\n    const accionEliminar = {\n        component: <img src={deleteIcon} alt=\"Editar\" />,\n        className: \"action-button delete-button\",\n        funcion: handleRecoverItem\n    }\n\n    const ModalButton = <button className='head-button' onClick={() => setModal(true)}>Crear</button>;\n\n    const Modal =\n        <div class=\"modal-background\">\n            <div class=\"modal-content h100 scroll\">\n                <div className='row w100'>\n                    <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n                </div>\n                <DetailComponent item={currentItem} />\n            </div>\n        </div>\n        ;\n\n    return (<Table\n        items={items}\n        title={\"Eliminados\"}\n        changeFrame={changeFrame}\n        acciones={[accionModificar]}\n        table={table}\n        modalState={ModalButton}\n        Modal={Modal}\n        ModalButton={ModalButton} />)\n\n    // const [items, setItems] = useState([]);\n    // const [forceRender, setForceRender] = useState();\n    // const [modal, setModal] = useState();\n    // const [currentItem, setCurrentItem] = useState();\n\n    // useEffect(() => {\n    //     fetchGet().then(response => setItems(response));\n    // }, [forceRender]);\n\n    // const [searchTerm, setSearchTerm] = useState('');\n    // const [filterColumn, setFilterColumn] = useState(null);\n\n    // const handleColumnButtonClick = (columnName) => {\n    //     if (filterColumn) {\n    //         if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n    //         else setFilterColumn(null);\n    //     } else setFilterColumn(columnName);\n    // }\n\n    // function handleDeleteItem(item) {\n    //     let resultado = window.confirm(`¿Está seguro que deseas eliminar ${vocabulary.pronombre} ${vocabulary.singular} con ${vocabulary.id} ${item[vocabulary.id]}?`)\n    //     if (resultado) (\n    //         fetchDelete(item[id])\n    //             .then(response => {\n    //                 setForceRender({})\n    //                 setCurrentItem();\n    //                 alert(`Se elimino exitosamente ${vocabulary.pronombre} ${vocabulary.singular} con ${vocabulary.id} ${item[vocabulary.id]}.`)\n    //             })\n    //             .catch(error => { console.log(error) })\n    //     );\n    // }\n\n    // const filteredData = items.filter((item) => {\n    //     if (filterColumn) {\n    //         let valueToSearch = item;\n\n    //         for (let i of filterColumn) {\n    //             valueToSearch = valueToSearch[i];\n    //         }\n    //         return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n    //     } else {\n    //         return true;\n    //     }\n    // });\n\n    // function handleSetModal(item) {\n    //     if (!modal) {\n    //         setCurrentItem(item);\n    //         setModal(true);\n    //     } else {\n    //         setModal(false);\n    //         setCurrentItem();\n    //     };\n    // };\n\n    // function getAtributte(item, index) {\n    //     for (let i of index) {\n    //         item = item[i];\n    //     } return item;\n    // }\n\n    // return (\n    //     <div>\n    //         {modal &&\n    // <div class=\"modal-background\">\n    //     <div class=\"modal-content h100 scroll\">\n    //         <div className='row w100'>\n    //             <button className='modal-close-button' onClick={handleSetModal}>Volver</button>\n    //         </div>\n    //         <DetailComponent item={currentItem} />\n    //     </div>\n    // </div>\n    //         }\n\n    //         <div className='head-table'>\n    //             <div className='row row-line'>\n    //                 <h1>{title}</h1>\n    //                 {changeFrame}\n    //             </div>\n    //             <div className='row'>\n    //                 <input\n    //                     type=\"search\"\n    //                     placeholder=\"Buscar...\"\n    //                     value={searchTerm}\n    //                     className='finder'\n    //                     onChange={(e) => setSearchTerm(e.target.value)}\n    //                 />\n    //                 <button className='head-button' onClick={() => setModal(true)}>Crear</button>\n    //             </div>\n    //         </div>\n    //         <table className=\"cliente-table\">\n    //             <thead>\n    //                 <tr>\n    //                     {table.map(group => (\n    //                         <th>\n    //                             <button className={filterColumn && filterColumn.toString() === group.filter.toString() ? 'selected' : ''} onClick={() => handleColumnButtonClick(group.filter)}>\n    //                                 {group.column}\n    //                             </button>\n    //                         </th>\n    //                     ))}\n    //                     <th>\n    //                         Acciones\n    //                     </th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {filteredData.map((item, index) => (\n    //                     <tr key={index}>\n    //                         {table.map(group => <td>{getAtributte(item, group.row)}</td>)}\n    //                         <td className='action-box'>\n    //                             <button className='action-button delete-button' onClick={() => handleDeleteItem(item)}>\n    //                                 <img src={deleteIcon} title=\"Eliminar\" />\n    //                             </button>\n    //                             <button className='action-button edit-button' onClick={() => handleSetModal(item)}>\n    //                                 <img src={editIcon} alt=\"Editar\" />\n    //                             </button>\n    //                         </td>\n    //                     </tr>\n    //                 ))}\n    //             </tbody>\n    //         </table>\n    //     </div >\n    // );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EACvC,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,KAAK;IAAEC,eAAe;IAAEC,KAAK;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAG,CAAC,GAAGR,KAAK;EAEnG,MAAMS,eAAe,GAAG;IACpBC,SAAS,eAAEZ,OAAA;MAAKa,GAAG,EAAEjB,QAAS;MAACkB,GAAG,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC9CC,SAAS,EAAE,2BAA2B;IACtCC,OAAO,EAAEC;EACb,CAAC;EAED,MAAMC,cAAc,GAAG;IACnBV,SAAS,eAAEZ,OAAA;MAAKa,GAAG,EAAEhB,UAAW;MAACiB,GAAG,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAChDC,SAAS,EAAE,6BAA6B;IACxCC,OAAO,EAAEC;EACb,CAAC;EAED,MAAME,WAAW,gBAAGvB,OAAA;IAAQmB,SAAS,EAAC,aAAa;IAACK,OAAO,EAAEA,CAAA,KAAMC,QAAQ,CAAC,IAAI,CAAE;IAAAC,QAAA,EAAC;EAAK;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;EAEjG,MAAMS,KAAK,gBACP3B,OAAA;IAAK4B,KAAK,EAAC,kBAAkB;IAAAF,QAAA,eACzB1B,OAAA;MAAK4B,KAAK,EAAC,2BAA2B;MAAAF,QAAA,gBAClC1B,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAAAO,QAAA,eACrB1B,OAAA;UAAQmB,SAAS,EAAC,oBAAoB;UAACK,OAAO,EAAEK,cAAe;UAAAH,QAAA,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACNlB,OAAA,CAACM,eAAe;QAACwB,IAAI,EAAEC;MAAY;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;EAGV,oBAAQlB,OAAA,CAACF,KAAK;IACVkC,KAAK,EAAEA,KAAM;IACb3B,KAAK,EAAE,YAAa;IACpBG,WAAW,EAAEA,WAAY;IACzByB,QAAQ,EAAE,CAACtB,eAAe,CAAE;IAC5BJ,KAAK,EAAEA,KAAM;IACb2B,UAAU,EAAEX,WAAY;IACxBI,KAAK,EAAEA,KAAM;IACbJ,WAAW,EAAEA;EAAY;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAEhC;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACiB,EAAA,GAjKuBlC,WAAW;AAiKlC;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}