{"ast":null,"code":"var _jsxFileName = \"/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Vehiculos/VehiculoTablaEliminados.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getVehiculosDeleted, postRecoverVehiculo } from \"../../Utils/Vehiculo\";\nimport backIcon from '../../Static/back.png';\nimport RecoverTable from '../Partials/RecoverTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VehiculoTablaEliminados(props) {\n  return /*#__PURE__*/_jsxDEV(RecoverTable, {\n    recoverFetch: postRecoverVehiculo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n  // const [items, setItems] = useState([]);\n  // const [forceRender, setForceRender] = useState();\n\n  // useEffect(() => {\n  //     getVehiculosDeleted().then(response => setItems(response));\n  // }, [forceRender]);\n\n  // const [searchTerm, setSearchTerm] = useState('');\n  // const [filterColumn, setFilterColumn] = useState(null);\n\n  // function handleRecoverItem(item) {\n  //     postRecoverVehiculo(item.patente)\n  //         .then(response => {\n  //             setForceRender({});\n  //             alert(`El vehiculo ${item.patente} recuperado con exito.`)\n  //         })\n  //         .catch(error => console.log(error))\n  // }\n\n  // const handleColumnButtonClick = (columnName) => {\n  //     if (filterColumn) {\n  //         if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n  //         else setFilterColumn(null);\n  //     } else setFilterColumn(columnName);\n  // }\n\n  // const filteredData = items.filter((item) => {\n  //     if (filterColumn) {\n  //         let valueToSearch;\n  //         if (filterColumn.length === 1) valueToSearch = item[filterColumn[0]];\n  //         if (filterColumn.length === 2) valueToSearch = item[filterColumn[0]][filterColumn[1]];\n  //         if (filterColumn.length === 3) valueToSearch = item[filterColumn[0]][filterColumn[1]][filterColumn[2]];\n  //         return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n  //     } else {\n  //         return true;\n  //     }\n  // });\n\n  // return (\n  //     <div>\n  //         <div className='head-table'>\n  //             <div className='row row-line'>\n  //                 <h1>Eliminados</h1>\n  //                 {props.changeFrame}\n  //             </div>\n  //             <div className='row'>\n  //                 <input\n  //                     type=\"search\"\n  //                     placeholder=\"Buscar...\"\n  //                     value={searchTerm}\n  //                     className='finder'\n  //                     onChange={(e) => setSearchTerm(e.target.value)}\n  //                 />\n  //             </div>\n  //         </div>\n  //         <table className=\"cliente-table\">\n  //             <thead>\n  //                 <tr>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'patente' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"patente\"])}>\n  //                             Patente\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'año' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"año\"])}>\n  //                             Año\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'modelo,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"nombre\"])}>\n  //                             Modelo\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'modelo,marca,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"marca\", \"nombre\"])}>\n  //                             Marca\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'cliente,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"nombre\"])}>\n  //                             Cliente nombre\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         <button className={filterColumn && filterColumn.toString() === 'cliente,apellido' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"apellido\"])}>\n  //                             Cliente apellido\n  //                         </button>\n  //                     </th>\n  //                     <th>\n  //                         Acciones\n  //                     </th>\n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {filteredData.map((item, index) => (\n  //                     <tr key={index}>\n  //                         <td>{item.patente}</td>\n  //                         <td>{item.año}</td>\n  //                         <td>{item.modelo.nombre}</td>\n  //                         <td>{item.modelo.marca.nombre}</td>\n  //                         <td>{item.cliente.nombre}</td>\n  //                         <td>{item.cliente.apellido}</td>\n  //                         <td className='action-box'>\n  //                             <button className='action-button back-button' onClick={() => handleRecoverItem(item)}>\n  //                                 <img src={backIcon} alt=\"Editar\" />\n  //                             </button>\n  //                         </td>\n  //                     </tr>\n  //                 ))}\n  //             </tbody>\n  //         </table>\n  //     </div >\n  // );\n}\n_c = VehiculoTablaEliminados;\n;\nvar _c;\n$RefreshReg$(_c, \"VehiculoTablaEliminados\");","map":{"version":3,"names":["React","useEffect","useState","getVehiculosDeleted","postRecoverVehiculo","backIcon","RecoverTable","jsxDEV","_jsxDEV","VehiculoTablaEliminados","props","recoverFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Vehiculos/VehiculoTablaEliminados.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { getVehiculosDeleted, postRecoverVehiculo } from \"../../Utils/Vehiculo\";\nimport backIcon from '../../Static/back.png';\nimport RecoverTable from '../Partials/RecoverTable';\n\n\nexport default function VehiculoTablaEliminados(props) {\n    return (\n        <RecoverTable\n            recoverFetch={postRecoverVehiculo}\n        />\n    )\n    // const [items, setItems] = useState([]);\n    // const [forceRender, setForceRender] = useState();\n\n    // useEffect(() => {\n    //     getVehiculosDeleted().then(response => setItems(response));\n    // }, [forceRender]);\n\n    // const [searchTerm, setSearchTerm] = useState('');\n    // const [filterColumn, setFilterColumn] = useState(null);\n\n    // function handleRecoverItem(item) {\n    //     postRecoverVehiculo(item.patente)\n    //         .then(response => {\n    //             setForceRender({});\n    //             alert(`El vehiculo ${item.patente} recuperado con exito.`)\n    //         })\n    //         .catch(error => console.log(error))\n    // }\n\n    // const handleColumnButtonClick = (columnName) => {\n    //     if (filterColumn) {\n    //         if (columnName.toString() !== filterColumn.toString()) setFilterColumn(columnName);\n    //         else setFilterColumn(null);\n    //     } else setFilterColumn(columnName);\n    // }\n\n\n    // const filteredData = items.filter((item) => {\n    //     if (filterColumn) {\n    //         let valueToSearch;\n    //         if (filterColumn.length === 1) valueToSearch = item[filterColumn[0]];\n    //         if (filterColumn.length === 2) valueToSearch = item[filterColumn[0]][filterColumn[1]];\n    //         if (filterColumn.length === 3) valueToSearch = item[filterColumn[0]][filterColumn[1]][filterColumn[2]];\n    //         return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n    //     } else {\n    //         return true;\n    //     }\n    // });\n\n    // return (\n    //     <div>\n    //         <div className='head-table'>\n    //             <div className='row row-line'>\n    //                 <h1>Eliminados</h1>\n    //                 {props.changeFrame}\n    //             </div>\n    //             <div className='row'>\n    //                 <input\n    //                     type=\"search\"\n    //                     placeholder=\"Buscar...\"\n    //                     value={searchTerm}\n    //                     className='finder'\n    //                     onChange={(e) => setSearchTerm(e.target.value)}\n    //                 />\n    //             </div>\n    //         </div>\n    //         <table className=\"cliente-table\">\n    //             <thead>\n    //                 <tr>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'patente' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"patente\"])}>\n    //                             Patente\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'año' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"año\"])}>\n    //                             Año\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'modelo,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"nombre\"])}>\n    //                             Modelo\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'modelo,marca,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"modelo\", \"marca\", \"nombre\"])}>\n    //                             Marca\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'cliente,nombre' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"nombre\"])}>\n    //                             Cliente nombre\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         <button className={filterColumn && filterColumn.toString() === 'cliente,apellido' ? 'selected' : ''} onClick={() => handleColumnButtonClick([\"cliente\", \"apellido\"])}>\n    //                             Cliente apellido\n    //                         </button>\n    //                     </th>\n    //                     <th>\n    //                         Acciones\n    //                     </th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {filteredData.map((item, index) => (\n    //                     <tr key={index}>\n    //                         <td>{item.patente}</td>\n    //                         <td>{item.año}</td>\n    //                         <td>{item.modelo.nombre}</td>\n    //                         <td>{item.modelo.marca.nombre}</td>\n    //                         <td>{item.cliente.nombre}</td>\n    //                         <td>{item.cliente.apellido}</td>\n    //                         <td className='action-box'>\n    //                             <button className='action-button back-button' onClick={() => handleRecoverItem(item)}>\n    //                                 <img src={backIcon} alt=\"Editar\" />\n    //                             </button>\n    //                         </td>\n    //                     </tr>\n    //                 ))}\n    //             </tbody>\n    //         </table>\n    //     </div >\n    // );\n\n};\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,mBAAmB,QAAQ,sBAAsB;AAC/E,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,eAAe,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EACnD,oBACIF,OAAA,CAACF,YAAY;IACTK,YAAY,EAAEP;EAAoB;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;EAEN;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ;AAACC,EAAA,GAzHuBP,uBAAuB;AAyH9C;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}