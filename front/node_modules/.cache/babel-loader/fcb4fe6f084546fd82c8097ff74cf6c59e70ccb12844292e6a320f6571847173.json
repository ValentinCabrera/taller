{"ast":null,"code":"export const host = \"http://localhost:8080/\";\nasync function customFetch(url, token, body) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) headers['Token'] = token;\n  const requestInit = {\n    headers: headers\n  };\n  if (body) {\n    requestInit[\"method\"] = \"POST\";\n    requestInit[\"body\"] = JSON.stringify(body);\n  }\n  ;\n  try {\n    const response = await fetch(url, requestInit);\n    const responseText = await response.text();\n    try {\n      return JSON.parse(responseText);\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n    ;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n  ;\n}\n;\nexport async function getFetch(url, token) {\n  return customFetch(url, token);\n}\n;\nexport async function postFetch(url, token, body) {\n  return customFetch(url, token, body);\n}\n;","map":{"version":3,"names":["host","customFetch","url","token","body","headers","requestInit","JSON","stringify","response","fetch","responseText","text","parse","error","console","log","getFetch","postFetch"],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Utils/Fetchs.js"],"sourcesContent":["export const host = \"http://localhost:8080/\";\n\nasync function customFetch(url, token, body) {\n    const headers = { 'Content-Type': 'application/json' };\n    if (token) headers['Token'] = token;\n\n    const requestInit = { headers: headers };\n\n    if (body) {\n        requestInit[\"method\"] = \"POST\";\n        requestInit[\"body\"] = JSON.stringify(body);\n    };\n\n    try {\n        const response = await fetch(url, requestInit);\n        const responseText = await response.text();\n\n        try {\n            return JSON.parse(responseText);\n        } catch (error) {\n            console.log(error);\n            return [];\n        };\n    } catch (error) {\n        console.log(error);\n        return [];\n    };\n};\n\nexport async function getFetch(url, token) {\n    return customFetch(url, token);\n};\n\nexport async function postFetch(url, token, body) {\n    return customFetch(url, token, body);\n};"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,wBAAwB;AAE5C,eAAeC,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAE;EACzC,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EACtD,IAAIF,KAAK,EAAEE,OAAO,CAAC,OAAO,CAAC,GAAGF,KAAK;EAEnC,MAAMG,WAAW,GAAG;IAAED,OAAO,EAAEA;EAAQ,CAAC;EAExC,IAAID,IAAI,EAAE;IACNE,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM;IAC9BA,WAAW,CAAC,MAAM,CAAC,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;EAC9C;EAAC;EAED,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEI,WAAW,CAAC;IAC9C,MAAMK,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE1C,IAAI;MACA,OAAOL,IAAI,CAACM,KAAK,CAACF,YAAY,CAAC;IACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,EAAE;IACb;IAAC;EACL,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,EAAE;EACb;EAAC;AACL;AAAC;AAED,OAAO,eAAeG,QAAQA,CAACf,GAAG,EAAEC,KAAK,EAAE;EACvC,OAAOF,WAAW,CAACC,GAAG,EAAEC,KAAK,CAAC;AAClC;AAAC;AAED,OAAO,eAAee,SAASA,CAAChB,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC9C,OAAOH,WAAW,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC;AACxC;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}