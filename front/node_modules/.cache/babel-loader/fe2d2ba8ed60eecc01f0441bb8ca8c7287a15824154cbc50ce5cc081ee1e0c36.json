{"ast":null,"code":"// import React, { useRef, useState } from 'react';\n// import './clienteTabla.css';\n\n// const ClienteTabla = (props) => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n//     const columnRef = useRef(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         setFilterColumn(columnName);\n//     }\n\n//     const handleColumnResize = (e) => {\n//         // Calcula el nuevo ancho de la columna y actualiza el estilo\n//         const newWidth = e.pageX - columnRef.current.getBoundingClientRect().left;\n//         columnRef.current.style.width = `${newWidth}px`;\n//     }\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Filtrar...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             <table className=\"cliente-table\">\n//                 <thead>\n//                     <tr>\n//                         <th ref={columnRef}>\n//                             <button onClick={() => handleColumnButtonClick('nombre')}>\n//                                 Nombre\n//                             </button>\n//                         </th>\n//                         {/* Resto de encabezados de columnas */}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {/* Cuerpo de la tabla */}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default ClienteTabla;\n\n// const ClienteTabla = (props) => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         setFilterColumn(columnName);\n//     }\n\n//     if (props.data) {\n//         const filteredData = props.data.filter((client) => {\n//             if (filterColumn) {\n//                 const valueToSearch = client[filterColumn];\n//                 return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n//             } else {\n//                 // Sin una columna de filtro seleccionada, muestra todos los datos\n//                 return true;\n//             }\n//         });\n\n//         return (\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Filtrar...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                 />\n//                 <table className=\"cliente-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('nombre')}>\n//                                     Nombre\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('apellido')}>\n//                                     Apellido\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('mail')}>\n//                                     Email\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('telefono')}>\n//                                     Telefono\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('direccion')}>\n//                                     Direccion\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('ultima_visita')}>\n//                                     Ultima visita\n//                                 </button>\n//                             </th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {filteredData.map((client, index) => (\n//                             <tr key={index}>\n//                                 <td>{client.nombre}</td>\n//                                 <td>{client.apellido}</td>\n//                                 <td>{client.mail}</td>\n//                                 <td>{client.telefono}</td>\n//                                 <td className=\"direccion-cell\">{client.direccion}</td>\n//                                 <td>{client.ultima_visita.replace('T', ' ').replace('-', '/').replace('-', '/').slice(0, 16)}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         );\n//     }\n//     return null;\n// };\n\n// export default ClienteTabla;","map":{"version":3,"names":[],"sources":["/Users/valentincabrera/Library/Mobile Documents/com~apple~CloudDocs/General/UTN/4to/ProgramacionAvanzada/taller/front/src/Components/Clientes/ClienteTabla.js"],"sourcesContent":["// import React, { useRef, useState } from 'react';\n// import './clienteTabla.css';\n\n// const ClienteTabla = (props) => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n//     const columnRef = useRef(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         setFilterColumn(columnName);\n//     }\n\n//     const handleColumnResize = (e) => {\n//         // Calcula el nuevo ancho de la columna y actualiza el estilo\n//         const newWidth = e.pageX - columnRef.current.getBoundingClientRect().left;\n//         columnRef.current.style.width = `${newWidth}px`;\n//     }\n\n//     return (\n//         <div>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Filtrar...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//             <table className=\"cliente-table\">\n//                 <thead>\n//                     <tr>\n//                         <th ref={columnRef}>\n//                             <button onClick={() => handleColumnButtonClick('nombre')}>\n//                                 Nombre\n//                             </button>\n//                         </th>\n//                         {/* Resto de encabezados de columnas */}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {/* Cuerpo de la tabla */}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default ClienteTabla;\n\n\n// const ClienteTabla = (props) => {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filterColumn, setFilterColumn] = useState(null);\n\n//     const handleColumnButtonClick = (columnName) => {\n//         setFilterColumn(columnName);\n//     }\n\n//     if (props.data) {\n//         const filteredData = props.data.filter((client) => {\n//             if (filterColumn) {\n//                 const valueToSearch = client[filterColumn];\n//                 return valueToSearch.toString().toLowerCase().includes(searchTerm.toLowerCase());\n//             } else {\n//                 // Sin una columna de filtro seleccionada, muestra todos los datos\n//                 return true;\n//             }\n//         });\n\n//         return (\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Filtrar...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                 />\n//                 <table className=\"cliente-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('nombre')}>\n//                                     Nombre\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('apellido')}>\n//                                     Apellido\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('mail')}>\n//                                     Email\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('telefono')}>\n//                                     Telefono\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('direccion')}>\n//                                     Direccion\n//                                 </button>\n//                             </th>\n//                             <th>\n//                                 <button onClick={() => handleColumnButtonClick('ultima_visita')}>\n//                                     Ultima visita\n//                                 </button>\n//                             </th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {filteredData.map((client, index) => (\n//                             <tr key={index}>\n//                                 <td>{client.nombre}</td>\n//                                 <td>{client.apellido}</td>\n//                                 <td>{client.mail}</td>\n//                                 <td>{client.telefono}</td>\n//                                 <td className=\"direccion-cell\">{client.direccion}</td>\n//                                 <td>{client.ultima_visita.replace('T', ' ').replace('-', '/').replace('-', '/').slice(0, 16)}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         );\n//     }\n//     return null;\n// };\n\n// export default ClienteTabla;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}